openapi: 3.0.0
info:
  title: CoWorkerMatch API
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local Server
tags:
  - name: Users
    description: ユーザに関する操作
  - name: Hobbies
    description: 趣味に関する操作
  - name: UserHobbies
    description: ユーザの趣味に関する操作
  - name: Matches
    description: マッチングに関する操作
  - name: Questions
    description: 2択の質問に関する操作
  - name: QuestionCards
    description: 質問カードに関する操作
  - name: Messages
    description: メッセージに関する操作
paths:
  /users:
    post:
      summary: Create a user
      description: Create a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
  /users/{user_id}:
    get:
      tags:
        - Users
      summary: Get a user by ID
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: user_idからユーザ取得
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserResponse'
    put:
      tags:
        - Users
      summary: Update a user by ID
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: 2回目以降ユーザがログインしたときに、Googleのアカウントの名前などが変更されている場合に情報を更新する or 単純にline_accountなどを追加・更新する時に呼ばれる。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserResponse'
  /hobbies:
    get:
      tags:
        - Hobbies
      summary: Get All hobbies with categories
      responses:
        '200':
          description: List of all hobbies with categories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHobbyResponse'
    post:
      summary: Create a new hobby
      tags:
        - Hobbies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hobby'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateHobbyResponse'
components:
  schemas:
    UserBase:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        avatar_url:
          type: string
          nullable: true
        age:
          type: integer
          nullable: true
        gender:
          type: string
          enum:
            - male
            - female
            - other
          nullable: true
        birthplace:
          type: string
          nullable: true
        job_type:
          type: string
          nullable: true
        line_account:
          type: string
          nullable: true
        discord_account:
          type: string
          nullable: true
        biography:
          type: string
          nullable: true
    CreateUserRequest:
      allOf:
        - $ref: '#/components/schemas/UserBase'
      required:
        - name
        - email
    User:
      allOf:
        - $ref: '#/components/schemas/UserBase'
      properties:
        user_id:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    CreateUserResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
    GetUserResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
    UpdateUserRequest:
      allOf:
        - $ref: '#/components/schemas/UserBase'
    UpdateUserResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
    Hobby:
      type: object
      properties:
        hobby_id:
          type: string
          format: uuid
        hobby_name:
          type: string
    Category:
      type: object
      properties:
        category_id:
          type: string
          format: uuid
        hobbies:
          type: array
          items:
            $ref: '#/components/schemas/Hobby'
    GetHobbyResponse:
      type: object
      properties:
        indoor:
          $ref: '#/components/schemas/Category'
        games:
          $ref: '#/components/schemas/Category'
        technicalHobbies:
          $ref: '#/components/schemas/Category'
        sports:
          $ref: '#/components/schemas/Category'
        outdoor:
          $ref: '#/components/schemas/Category'
        music:
          $ref: '#/components/schemas/Category'
    HobbyDetails:
      type: object
      properties:
        hobby_id:
          type: string
          format: uuid
        hobby_name:
          type: string
        category_id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    CreateHobbyResponse:
      type: object
      properties:
        hobby:
          $ref: '#/components/schemas/HobbyDetails'
